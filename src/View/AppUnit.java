/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Communicate.Cmd.Cmd;
import Model.AppParamater;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author 21AK22
 */
public class AppUnit extends javax.swing.JPanel {

    private Image image;
    private String appName;
    private File appFile;

    /**
     * Creates new form AppUnit
     *
     */
    public AppUnit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_icon = new javax.swing.JLabel();
        lb_name = new javax.swing.JLabel();

        setAlignmentX(0.1F);
        setAlignmentY(0.1F);
        setPreferredSize(new java.awt.Dimension(100, 120));

        lb_icon.setBackground(new java.awt.Color(204, 204, 255));
        lb_icon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lb_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_icon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lb_icon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lb_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_iconMouseClicked(evt);
            }
        });

        lb_name.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lb_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_name, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
            .addComponent(lb_icon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lb_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lb_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_iconMouseClicked
        // TODO add your handling code here:
        if (appFile == null) {
            return;
        }
        if (evt.getClickCount() > 1) {
            new Cmd().sendCommand(this.appFile.getPath());
        }
    }//GEN-LAST:event_lb_iconMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lb_icon;
    private javax.swing.JLabel lb_name;
    // End of variables declaration//GEN-END:variables

    void showIcon() {
        if (appFile == null || appName == null) {
            return;
        }
        if (image == null) {
            image = getDefaultImage();
        }
        this.lb_icon.setIcon(new ImageIcon(image));
        this.lb_name.setText(appName);
    }

    private Image getDefaultImage() {
        BufferedImage bufferedImage;
        try {
            bufferedImage = ImageIO.read(getClass().getResource("empty.png"));
            return bufferedImage.getScaledInstance(
                    this.lb_icon.getWidth(), 
                    this.lb_icon.getHeight(),
                    Image.SCALE_AREA_AVERAGING);
        } catch (IOException ex) {
            ex.printStackTrace();
            return null;
        }
    }

    void setAppParameter(AppParamater paramater) {
        if (paramater == null) {
            return;
        }
        this.image = paramater.getIcon();
        this.appName = paramater.getAppName();
        this.appFile = paramater.getAppFile();
    }
}
