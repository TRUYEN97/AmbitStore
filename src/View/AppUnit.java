/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Model.App.AppElement;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author 21AK22
 */
public class AppUnit extends javax.swing.JPanel {

    private AppElement appElement;

    /**
     * Creates new form AppUnit
     *
     */
    public AppUnit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_icon = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setAlignmentX(0.1F);
        setAlignmentY(0.1F);
        setPreferredSize(new java.awt.Dimension(100, 120));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        lb_icon.setBackground(new java.awt.Color(204, 204, 255));
        lb_icon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lb_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_icon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lb_icon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_icon, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_icon, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
        if (isAppAvaiable()) {
            this.setBackground(this.getBackground().darker());
        }
    }//GEN-LAST:event_formMouseEntered

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if (isAppAvaiable() && evt.getClickCount() > 1) {
            this.appElement.run();
        }
    }//GEN-LAST:event_formMouseClicked

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
        if (isAppAvaiable()) {
            this.setBackground(this.getBackground().brighter());
        }
    }//GEN-LAST:event_formMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lb_icon;
    // End of variables declaration//GEN-END:variables

    void display() {
        if (!isAppAvaiable()) {
            return;
        }
        if (this.appElement.getIcon() == null) {
            this.lb_icon.setIcon(getDefaultImage());
        } else {
            this.lb_icon.setIcon(createIcon(this.appElement.getIcon()));
        }
        this.lb_icon.setText(this.appElement.getName());
    }

    private boolean isAppAvaiable() {
        return this.appElement != null && this.appElement.getName() != null && this.appElement.getRunFile() != null;
    }

    private ImageIcon createIcon(File icon) {
        try {
            BufferedImage image = ImageIO.read(icon);
            return new ImageIcon(resizeIcon(image));
        } catch (IOException ex) {
            return null;
        }
    }

    private ImageIcon getDefaultImage() {
        try {
            return new ImageIcon(resizeIcon(ImageIO.read(getClass().getResource("empty.png"))));
        } catch (IOException ex) {
            ex.printStackTrace();
            return null;
        }
    }

    private Image resizeIcon(BufferedImage bufferedImage) {
        return bufferedImage.getScaledInstance(
                (int) (this.lb_icon.getWidth() * 0.8),
                (int) (this.lb_icon.getHeight() * 0.6),
                Image.SCALE_AREA_AVERAGING);
    }

    void setAppParameter(AppElement appElement) {
        if (appElement == null) {
            return;
        }
        this.appElement = appElement;
    }
}
