/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Model.Application.AppEntity.IappParameter;
import java.awt.Color;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 *
 * @author Administrator
 */
public class StorePanel extends javax.swing.JPanel {

    private final List<AppUnit> appUnits;
    private final HashMap<IappParameter, AppUnit> apps;

    /**
     * Creates new form StorePanel
     */
    public StorePanel() {
        this.appUnits = new ArrayList<>();
        this.apps = new HashMap<>();
        initComponents();
    }

    public void setGridZise(int rows, int columns) {
        this.removeAll();
        this.setLayout(new GridLayout(rows, columns, 0, 0));
        AppUnit appUnit;
        Color backgroundColor = this.getBackground();
        for (int i = 0; i < rows * columns; i++) {
            appUnit = new AppUnit(backgroundColor);
            this.add(appUnit);
            this.appUnits.add(appUnit);
        }
        this.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 294, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    void clear() {
        for (AppUnit appUnit : appUnits) {
            if (appUnit.isAppAvaiable()) {
                appUnit.unDisplay();
            }
        }
    }


    public void updateApp(IappParameter app) {
        if (this.apps.containsKey(app)) {
            AppUnit appUnit = this.apps.get(app);
            appUnit.setApp(app);
        }else{
            AppUnit appUnit = this.appUnits.get(this.apps.size());
            this.apps.put(app, appUnit);
            appUnit.setApp(app);
        }
    }

    public void deleteApp(IappParameter project) {
        if (this.apps.containsKey(project)) {
            this.apps.get(project).unDisplay();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
