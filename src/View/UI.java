/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.App.AppElement;
import Model.Socket.ClientSender;
import Model.Source.Setting;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author 21AK22
 */
public class UI extends javax.swing.JFrame {

    private final Setting setting;
    private final ClientSender clientSender;

    /**
     * Creates new form UI
     *
     * @param title
     * @param clientSender
     */
    public UI(String title, ClientSender clientSender) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        this.storePanel = new StorePanel();
        initComponents();
        this.setting = Setting.getInstance();
        this.clientSender = clientSender;
        this.setIconImage(Toolkit.getDefaultToolkit().createImage(this.setting.getMyIconPath()));
        this.setTitle(title);
        this.storePanel.setGridZise(3, 5);
    }

    public boolean addApps(List<AppElement> apps) {
        return this.storePanel.addApps(apps);
    }

    public boolean addAppParameter(int index, AppElement appParamater) {
        return this.storePanel.addApp(index, appParamater);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        storeBackground = this.storePanel;
        pn_connect = new javax.swing.JPanel();
        lb_serverName = new javax.swing.JLabel();
        lb_update = new javax.swing.JLabel();

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        storeBackground.setBackground(new java.awt.Color(255, 255, 255));
        storeBackground.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        storeBackground.setAutoscrolls(true);

        javax.swing.GroupLayout storeBackgroundLayout = new javax.swing.GroupLayout(storeBackground);
        storeBackground.setLayout(storeBackgroundLayout);
        storeBackgroundLayout.setHorizontalGroup(
            storeBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        storeBackgroundLayout.setVerticalGroup(
            storeBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 421, Short.MAX_VALUE)
        );

        pn_connect.setBackground(new java.awt.Color(51, 255, 51));

        lb_serverName.setBackground(new java.awt.Color(204, 204, 255));
        lb_serverName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_serverName.setText("...");
        lb_serverName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lb_serverName.setOpaque(true);

        lb_update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_update.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_update.setText("Update");
        lb_update.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lb_update.setOpaque(true);
        lb_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_updateMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pn_connectLayout = new javax.swing.GroupLayout(pn_connect);
        pn_connect.setLayout(pn_connectLayout);
        pn_connectLayout.setHorizontalGroup(
            pn_connectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_connectLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lb_update, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(lb_serverName, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        pn_connectLayout.setVerticalGroup(
            pn_connectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_connectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_connectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_serverName, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(lb_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pn_connect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(storeBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_connect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(storeBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lb_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_updateMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() > 1) {
            if (!this.clientSender.update()) {
                JOptionPane.showMessageDialog(null, "Update failed!");
            } else {
                JOptionPane.showMessageDialog(null, "Update success!");
            }
        }
    }//GEN-LAST:event_lb_updateMouseClicked

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if (evt.isControlDown()) {
            if (evt.isAltDown() && evt.getKeyCode() == KeyEvent.VK_Q) {
                System.exit(0);
            } else if (evt.getKeyCode() == KeyEvent.VK_H) {
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_formKeyPressed

    public void display() {
        java.awt.EventQueue.invokeLater(() -> {
            this.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lb_serverName;
    private javax.swing.JLabel lb_update;
    private javax.swing.JPanel pn_connect;
    private javax.swing.JPanel storeBackground;
    // End of variables declaration//GEN-END:variables
    private final StorePanel storePanel;

    public void showServerAddr(String format) {
        this.lb_serverName.setText(format);
    }

    public void setServerConnect(boolean connect) {
        if (connect) {
            this.pn_connect.setBackground(Color.green);
        } else {
            this.pn_connect.setBackground(Color.red);
        }
    }
}
